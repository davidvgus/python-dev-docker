
# 2017-05-21 13:38:35.071105
+first = 10

# 2017-05-21 13:38:38.107470
+first

# 2017-05-21 13:47:25.278922
+eh

# 2017-05-21 13:47:46.482326
+if True:
+    print "hoo"

# 2017-05-21 13:48:07.814226
+print('hi')

# 2017-05-21 13:48:39.322324
+if True:
+    print "ha"

# 2017-05-21 13:56:28.642080
+version

# 2017-05-21 14:06:53.805053
+import sys

# 2017-05-21 14:07:03.130288
+sys.version_info

# 2017-05-21 14:40:04.404328
+greeting = "booty"

# 2017-05-21 14:40:10.243798
+greeting[0]

# 2017-05-21 16:08:33.235495
+greeting

# 2017-05-21 16:08:50.560937
+greeting[:5]

# 2017-05-21 16:08:56.968233
+greeting

# 2017-05-21 16:25:02.238925
+meh = input

# 2017-05-21 16:25:08.945623
+hi

# 2017-05-21 16:25:25.327998
+meh = input("howdy")

# 2017-05-21 16:25:26.863028
+meh

# 2017-05-21 16:43:01.794628
+import sys

# 2017-05-21 16:43:15.977273
+sys.flags

# 2017-05-21 16:43:23.869112
+sys.argv

# 2017-05-21 16:43:36.546146
+sys.getprofile

# 2017-05-21 16:49:45.608126
+boo

# 2017-05-21 16:51:06.887089
+"a\nb"

# 2017-05-21 16:51:15.512254
+s = "a\nb"

# 2017-05-21 16:51:26.314942
+print(s)

# 2017-05-21 16:51:48.638046
+s = 'a\nb'

# 2017-05-21 16:51:51.717744
+print(s)

# 2017-05-21 16:55:57.806789
+ss = """
+hoo
+hah
+zoo zim
+"""
+ss

# 2017-05-21 16:55:59.117813
+ss

# 2017-05-21 16:56:08.396876
+print(ss)

# 2017-05-21 16:57:14.891818
+3 * 'm'

# 2017-05-21 16:57:29.290583
+print (3 * 'loo')

# 2017-05-21 16:57:41.499793
+'py' 'thon'

# 2017-05-21 16:58:06.636254
+y = 'yoo'

# 2017-05-21 16:58:10.004420
+h = 'hoo'

# 2017-05-21 16:58:19.483939
+y + h

# 2017-05-21 17:16:39.210491
+c = "can't"

# 2017-05-21 17:16:40.074752
+c

# 2017-05-21 17:17:02.684016
+c[1] = u

# 2017-05-21 17:17:33.790545
+c[1] = 'u' 

# 2017-05-21 17:18:11.136255
+c = 'foo'

# 2017-05-21 17:18:12.265869
+c

# 2017-05-21 17:18:47.837169
+id(c)

# 2017-05-21 17:18:56.175670
+hex(id(c))

# 2017-05-21 17:19:15.320415
+c = 'a'

# 2017-05-21 17:19:17.552029
+hex(id(c))

# 2017-05-21 17:24:14.754920
+'01\t012\t0123\t01234'.expandtabs(4)

# 2017-05-21 17:24:19.831620
+'01\t012\t0123\t01234'.expandtabs()

# 2017-05-21 17:24:26.250365
+'01\t012\t0123\t01234'.expandtabs(9)

# 2017-05-21 17:24:39.063736
+'01\t012\t0123\t01234'.expandtabs(30)

# 2017-05-21 17:24:53.825476
+'01\t012\t0123\t01234'.expandtabs(200)

# 2017-05-21 17:24:57.491899
+'01\t012\t0123\t01234'.expandtabs()

# 2017-05-21 17:34:16.537914
+x = [1,2,3]

# 2017-05-21 17:34:17.616726
+x

# 2017-05-21 17:34:54.811791
+y = x.copy()

# 2017-05-21 17:34:56.498818
+y

# 2017-05-21 17:35:04.335904
+y[0] = "a"

# 2017-05-21 17:35:08.358183
+y

# 2017-05-21 17:35:10.984012
+x

# 2017-05-21 17:35:27.010189
+y = x.deepcopy()

# 2017-05-21 17:48:45.494240
+a = [1,2,3]

# 2017-05-21 17:49:34.996630
+a[2:] = ['a', 'b', 'c']

# 2017-05-21 17:49:37.110443
+a

# 2017-05-21 17:50:03.744033
+a = [1,2,3]

# 2017-05-21 17:57:33.547033
+for i in a:
+    print(i)

# 2017-05-21 18:35:32.014296
+for i in range(5):
+    print(i)
+    

# 2017-05-21 18:43:38.335630
+exit

# 2017-05-21 18:54:33.234397
+exit*()

# 2017-05-22 18:02:32.793053
+print("hi")
+
+
+

# 2017-05-22 18:11:49.211410
+print('hi')

# 2017-05-22 19:33:28.720538
+for i in range(1,6):
+    print(i)

# 2017-05-23 17:16:07.122655
+assert(True, "jeah boy")

# 2017-05-23 17:17:10.425841
+assertTrue(False)

# 2017-05-23 17:17:21.735069
+self.assertTrue(True)

# 2017-05-23 17:18:09.886762
+import unittest

# 2017-05-23 17:18:15.071892
+asserTrue

# 2017-05-23 17:18:23.636190
+self.assertTrue

# 2017-05-25 13:02:46.545224
+"men".__class__

# 2017-05-25 13:10:13.257202
+"\'"

# 2017-05-25 13:10:18.821517
+"'"

# 2017-05-25 13:10:27.515298
+'\''

# 2017-05-25 15:54:31.887169
+len("hi")

# 2017-05-25 15:55:31.339695
+"hi".capitalize()

# 2017-05-25 15:55:36.476503
+"hi".capitalize

# 2017-05-28 13:18:05.278163
+i = 10

# 2017-05-28 13:18:08.346818
+count = 1

# 2017-05-28 13:18:27.264507
+while count < 10:
+    count += 1

# 2017-05-28 13:18:51.545124
+while count > 0:
+    count -= 1

# 2017-05-28 13:19:09.970290
+print(count)

# 2017-05-28 16:31:00.389117
+pint(len(5))

# 2017-05-28 16:31:06.775884
+print(len(5))

# 2017-05-28 16:39:38.612311
+pring(b)

# 2017-05-28 16:39:56.918218
+a = b

# 2017-05-28 16:49:06.801922
+type("hi")

# 2017-05-28 16:49:23.059954
+type(1)

# 2017-05-28 16:49:37.474357
+type("a");type(1)

# 2017-05-28 20:13:17.008514
+quit

# 2017-12-19 07:34:21.079732
+print('hi')

# 2017-12-19 07:35:07.640051
+import random

# 2017-12-19 07:35:26.125744
+random.randint(1,100)

# 2017-12-19 07:36:57.535259
+for i in [1,2,3]:
+    print(i)
+    print(i + 1)

# 2017-12-19 07:48:55.586314
+range(1,10)

# 2017-12-19 07:49:01.114957
+la = range(1,10)

# 2017-12-19 07:49:02.238849
+la

# 2017-12-19 07:50:11.173449
+range(10)

# 2017-12-19 07:50:26.881741
+bleh = range(10)

# 2017-12-19 07:50:31.436118
+print(bleh)

# 2017-12-19 07:52:00.215371
+list(bleh)

# 2017-12-19 07:58:41.131906
+for i in range(10):
+    print(i)

# 2017-12-19 08:01:09.681974
+fortunes = ['You will have very good luck today.',
+            'A secret admirer will soon show how they feel.',
+            "The more you give, the more you'll have.",
+            'Hard work pays off.',
+            "Don't give up."]

# 2017-12-19 08:01:13.533879
+fortunes

# 2017-12-19 08:01:52.895063
+fortunes.random_choice()

# 2017-12-19 08:02:17.413790
+fortunes.random()

# 2017-12-19 08:02:42.958178
+random.choice(fortunes)

# 2017-12-19 08:20:52.812816
+random.randint(1,53)

# 2017-12-19 08:27:13.395619
+performances = {'Ventriloquism':'9:00am', 
+                'Snake Charmer': '12:00pm', 
+                'Amazing Acrobatics': '2:00pm', 
+                'Enchanted Elephants':'5:00pm'}

# 2017-12-19 08:28:15.697628
+for name, price in performances:
+    print(name, price)

# 2017-12-19 08:28:46.961029
+for name, price in performances:
+    print(name)

# 2017-12-19 08:33:24.864736
+performances = {'Ventriloquism':'9:00am', 
+                'Snake Charmer': '12:00pm', 
+                'Amazing Acrobatics': '2:00pm', 
+                'Enchanted Elephants':'5:00pm'}

# 2017-12-19 08:33:47.165890
+for key, value in performances:
+    print(key)

# 2017-12-19 08:34:17.240692
+for key, value in performances.items():
+    print(key)

# 2017-12-19 08:35:50.539502
+for key, value in performances.items():
+    print(key, value)

# 2017-12-19 08:36:04.356190
+for key, value in performances.items():
+    print(key +  value)

# 2017-12-19 08:36:19.783109
+for key, value in performances.items():
+    print(key,": ", value)

# 2017-12-19 08:36:39.593447
+for key, value in performances.items():
+    print(key,": ", value, "")

# 2017-12-19 09:11:30.969576
+def bloo(fart):
+    print(fart)

# 2017-12-19 09:11:36.066609
+bloo("howdy")

# 2017-12-20 09:14:53.914449
+import requests

# 2017-12-20 09:15:10.745302
+my_request = requests.get('https://google.com')

# 2017-12-20 09:15:13.443445
+my_request

# 2017-12-20 09:15:33.200713
+my_request.headers()

# 2017-12-20 09:15:46.029402
+my_request.headers

# 2017-12-20 09:16:19.141299
+import pprint

# 2017-12-20 09:16:44.453700
+pp(my_request)

# 2017-12-20 09:17:02.603805
+pprint(my_request)

# 2017-12-20 09:17:15.703133
+pp = pprint.PrettyPrinter(indent=4)

# 2017-12-20 09:17:24.654410
+pp.pprint(my_request)

# 2017-12-20 09:17:38.868372
+pp.pprint(my_request.headers)

# 2017-12-20 09:18:28.007950
+import json

# 2017-12-20 09:18:51.445877
+my_json = json.load(my_request.headers)

# 2017-12-20 09:21:04.537677
+my_request.headers['Date']

# 2017-12-20 09:21:22.070249
+pp.pprint(my_request.headers)

# 2017-12-20 09:22:55.870055
+pp.pprint(my_request.headers, indent=2)

# 2017-12-20 09:23:24.643167
+print(my_request.headers)

# 2017-12-20 09:24:00.809155
+bleh = {}

# 2017-12-20 09:24:09.093681
+bleh = my_request.headers

# 2017-12-20 09:24:10.544568
+bleh

# 2017-12-20 09:24:23.332902
+pp.pprint(bleh)

# 2017-12-20 09:25:48.511746
+my_request.content

# 2017-12-20 09:26:14.162641
+my_request.apparent_encoding

# 2017-12-20 09:26:26.471834
+my_request.json

# 2017-12-20 09:26:44.376737
+my_request.raw

# 2017-12-20 09:27:19.288014
+my_request.cookies

# 2017-12-20 09:27:44.154371
+my_request.iter_lines

# 2017-12-20 09:28:08.272298
+print(my_request.iter_lines)

# 2017-12-20 09:28:32.941433
+for i in my_request.iter_content:
+    print(i)

# 2017-12-20 09:30:28.856497
+my_request.json()

# 2017-12-20 09:32:51.596037
+my_request = requests.get('http://go.codeschool.com/spamvanmenu')

# 2017-12-20 09:33:08.958361
+menu_list = my_request.json()

# 2017-12-20 09:33:12.021528
+menu_list

# 2017-12-20 09:33:23.558385
+pp.pprint(menu_list)

# 2017-12-20 09:33:48.909736
+my_request.content

# 2017-12-20 09:56:08.165042
+url = "http://api.openweathermap.org/data/2.5/weather?q=Orlando,fl&units=imperial&appid=2de143494c0b295cca9337e1e96b00e0"
+request = requests.get(url)
+
+weather_json = request.json()

# 2017-12-20 09:56:13.665760
+weather_json

# 2017-12-20 10:05:01.771603
+url = "http://api.wunderground.com/api/62e601769c807464"
+request = requests.get(url)
+
+weather_json = request.json()

# 2017-12-20 10:05:09.971223
+weather_json

# 2017-12-20 10:05:45.355951
+url = "http://api.wunderground.com/api/62e601769c807464/conditions/q/CA/Oakland.json"
+request = requests.get(url)
+
+weather_json = request.json()

# 2017-12-20 10:05:49.411705
+weather_json

# 2017-12-20 10:06:08.510716
+pp.pprint(weather_json)

# 2017-12-20 10:50:29.562644
+{'sys': {'type': 1, 'sunset': 1452552475, 'sunrise': 1452514764, 'id': 703, 'message': 0.0038, 'country': 'US'}, 'weather': [{'description': 'sky is clear', 'icon': '01d', 'id': 800, 'main': 'Clear'}], 'wind': {'speed': 4.54}, 'clouds': {'all': 1}, 'main': {'temp': 47.89, 'humidity': 61, 'pressure': 1024, 'temp_max': 48.2, 'temp_min': 46.4}, 'coord': {'lat': 28.54, 'lon': -81.38}, 'base': 'cmc stations', 'cod': 200, 'name': 'Orlando', 'id': 4167147, 'dt': 1452523980}

# 2017-12-20 10:50:40.478787
+weather_json = {'sys': {'type': 1, 'sunset': 1452552475, 'sunrise': 1452514764, 'id': 703, 'message': 0.0038, 'country': 'US'}, 'weather': [{'description': 'sky is clear', 'icon': '01d', 'id': 800, 'main': 'Clear'}], 'wind': {'speed': 4.54}, 'clouds': {'all': 1}, 'main': {'temp': 47.89, 'humidity': 61, 'pressure': 1024, 'temp_max': 48.2, 'temp_min': 46.4}, 'coord': {'lat': 28.54, 'lon': -81.38}, 'base': 'cmc stations', 'cod': 200, 'name': 'Orlando', 'id': 4167147, 'dt': 1452523980}

# 2017-12-20 10:50:53.028314
+weather_json['main']

# 2017-12-20 10:52:43.321806
+weather_json['main']['temp']

# 2017-12-20 11:22:07.762287
+exit

# 2017-12-21 12:16:10.315962
+s = "hello there pal"

# 2017-12-21 12:16:11.429998
+s

# 2017-12-21 12:16:41.068914
+s.upper

# 2017-12-21 12:16:45.790031
+s.upper()

# 2017-12-21 12:17:30.187835
+s.title()

# 2017-12-21 12:20:01.587617
+s ="How can mirrors be real if our eyes aren't real"

# 2017-12-21 12:20:04.019833
+s.title

# 2017-12-21 12:20:10.412672
+s.title()

# 2017-12-21 12:20:36.026310
+s.split()

# 2017-12-21 12:20:57.068981
+for i in s:
+    print(i)

# 2017-12-21 12:21:20.641715
+for i in s.split(' '):
+    print(i)

# 2017-12-21 12:22:26.431701
+for i in s.split(' '):
+   i[0].upper() 

# 2017-12-21 12:22:29.971633
+s

# 2017-12-21 12:22:47.592402
+s2 = ''

# 2017-12-21 12:23:55.734989
+for i in s.split(' '):
+   tmp_word = i
+   tmp_word[i0].upper() 
+   print(tmp_word)

# 2017-12-21 12:24:08.783261
+for i in s.split(' '):
+   tmp_word = i
+   tmp_word[0].upper() 
+   print(tmp_word)

# 2017-12-21 12:24:46.961884
+b = bleh

# 2017-12-21 12:24:55.312026
+b = "bleh"

# 2017-12-21 12:24:58.768468
+b.upper

# 2017-12-21 12:25:01.645320
+b.upper()

# 2017-12-21 12:25:14.341102
+b[0].upper()

# 2017-12-21 12:25:17.268152
+b

# 2017-12-21 12:25:36.441462
+b[0]= b[0].upper()

# 2017-12-21 12:26:53.942923
+for i in s.split(' '):
+   tmp_word = [0].upper() + i[1:] 
+   print(tmp_word)

# 2017-12-21 12:27:12.987323
+word = "bleh"

# 2017-12-21 12:27:40.379037
+new = word[0] + "ooo"

# 2017-12-21 12:27:44.242623
+new

# 2017-12-21 12:28:11.264979
+for i in s.split(' '):
+   tmp_word = i[0].upper() + i[1:] 
+   print(tmp_word)

# 2017-12-21 12:31:44.021585
+a = ['c', 'a', 't']

# 2017-12-21 12:31:50.727246
+a.join(' ')

# 2017-12-21 12:33:04.553629
+s = ''

# 2017-12-21 12:33:10.055146
+s.join(a)

# 2017-12-21 12:39:41.675230
+s = 'the rain in spain'

# 2017-12-21 12:39:45.148289
+s.capitalize()

# 2017-12-21 12:40:12.303826
+s = 'the rain in spain\'t'

# 2017-12-21 12:40:15.403943
+s.capitalize()

# 2017-12-21 12:40:27.907352
+s.title()

# 2017-12-21 12:54:30.066302
+def unique_in_order(iterable):
+    pass

# 2017-12-21 12:55:50.497255
+s = 'AAAABBBCCDAABBB'

# 2017-12-21 12:56:20.832938
+unique_in_order(s)

# 2017-12-21 12:57:34.798591
+final =''

# 2017-12-21 12:57:44.023856
+final = []

# 2017-12-21 12:58:17.029604
+len(s)

# 2017-12-21 12:58:26.017598
+s[15]

# 2017-12-21 12:58:31.507767
+s[15 - 1]

# 2017-12-21 12:59:38.697755
+for i in s:
+    printr(i)

# 2017-12-21 12:59:54.593972
+for i in s:
+    print(i)

# 2017-12-21 13:01:48.107964
+while i < len(s):
+    print(s[i])

# 2017-12-21 13:02:14.834145
+i = 0

# 2017-12-21 13:02:34.805904
+while i < len(s):
+    print(s[i])
+    i += 1
+   
+    

# 2017-12-21 13:02:51.171251
+while i < len(s):
+    print(s[i])
+    i += 1

# 2017-12-21 13:05:40.099444
+while i < len(s):
+    a = s[i]
+    b = s[i + 1]
+    if a == b:
+        print(a, " equals ", b)
+    else:
+        print(a, " does not equal ", b)
+    i += 1

# 2017-12-21 13:06:24.285909
+print(i)

# 2017-12-21 13:06:30.896664
+i = 0

# 2017-12-21 13:06:35.490027
+while i < len(s):
+    a = s[i]
+    b = s[i + 1]
+    if a == b:
+        print(a, " equals ", b)
+    else:
+        print(a, " does not equal ", b)
+    i += 1

# 2017-12-21 13:17:26.361863
+unique_in_order('123')

# 2017-12-21 13:30:46.403280
+s = [1,2,3]

# 2017-12-21 13:30:50.041329
+len(s)

# 2017-12-21 13:30:57.767661
+a = [1,2,3]

# 2017-12-21 13:31:01.704321
+len(a)

# 2017-12-21 13:33:32.423956
+unique_in_order('123')

# 2017-12-21 14:05:02.315402
+a = [1,2,3]

# 2017-12-21 14:05:05.448811
+len(a)

# 2017-12-21 14:06:43.591364
+unique_in_order('123')

# 2017-12-22 08:17:25.944156
+a = []

# 2017-12-22 08:18:33.816558
+if not a:
+    print("empty")
+else:
+    print("not empty")

# 2017-12-22 08:18:45.426470
+a = [1]

# 2017-12-22 08:18:48.294551
+if not a:
+    print("empty")
+else:
+    print("not empty")

# 2017-12-22 08:19:53.311360
+a = ''

# 2017-12-22 08:19:56.103421
+if not a:
+    print("empty")
+else:
+    print("not empty")

# 2017-12-22 08:23:16.383771
+a = [1,1,2,2,3,3,2,2,2]

# 2017-12-22 08:23:24.469995
+groupby(a)

# 2017-12-22 08:23:44.255026
+from itertools import groupby

# 2017-12-22 08:23:46.102412
+groupby(a)

# 2017-12-22 08:23:56.778289
+bleh = groupby(a)

# 2017-12-22 08:23:58.415600
+bleh

# 2017-12-22 08:24:12.331083
+print(bleh)

# 2017-12-22 08:24:25.814032
+for i in bleh:
+    print(i)

# 2017-12-22 08:30:24.711111
+for (k, v) in groupby(bleh):
+    print(k)

# 2017-12-22 08:30:41.492219
+for (k, v) in groupby(bleh):
+    print(k)
+    print(v)

# 2017-12-22 08:30:46.563815
+print(bleh)

# 2017-12-22 08:30:55.796122
+bleh = groupby(a)

# 2017-12-22 08:30:59.175568
+for (k, v) in groupby(bleh):
+    print(k)
+    print(v)

# 2017-12-22 08:31:57.417973
+bleh = groupby(a)

# 2017-12-22 08:32:01.497181
+for (k, v) in groupby(bleh):
+    print(k)

# 2017-12-22 08:32:35.369022
+for (k, v) in groupby(bleh):
+    print(k[0])

# 2017-12-22 08:32:41.159386
+bleh = groupby(a)

# 2017-12-22 08:32:44.652690
+for (k, v) in groupby(bleh):
+    print(k[0])

# 2017-12-22 08:33:24.421332
+[k for (k, _) in groupby(bleh)]

# 2017-12-22 08:33:39.081269
+bleh = groupby(a)

# 2017-12-22 08:33:45.799397
+[k for (k, _) in groupby(a)]

# 2017-12-22 08:37:05.569479
+pydoc

# 2017-12-22 14:52:26.123309
+a = [1,2,3]

# 2017-12-22 14:52:28.500856
+a.all

# 2017-12-22 14:52:31.879570
+a.all()

# 2017-12-22 14:52:33.499986
+a

# 2017-12-23 07:34:51.828463
+class Bleh:
+    self.hoo = "HOOO!"

# 2017-12-23 07:36:00.033153
+class Bleh:
+    def __init__(self):
+        self.hoo = "HOOO!"

# 2017-12-23 07:36:23.485539
+h = Bleh();

# 2017-12-23 07:36:28.369827
+h.hoo

# 2017-12-23 07:46:36.048349
+typ(h)

# 2017-12-23 07:46:43.350847
+type(h)

# 2018-01-20 12:37:27.958388
+import pygame

# 2018-01-20 12:37:34.622658
+x = pygame.init()

# 2018-01-20 12:37:40.724597
+print(x)

# 2018-01-20 12:37:49.862452
+pygame

# 2018-01-20 13:37:30.973724
+import pygame

# 2018-01-20 13:37:37.582525
+pygame.Color

# 2018-01-20 13:37:49.639347
+p = pygame.Color

# 2018-01-20 13:37:52.614589
+p.red

# 2018-01-20 13:38:10.317134
+p('red')

# 2018-01-20 13:38:21.415126
+p('black')

# 2018-01-20 13:51:05.907957
+import fibo

# 2018-01-20 13:51:14.455614
+fib(2)

# 2018-01-20 13:51:31.682041
+fibo.fib(2)

# 2018-01-20 14:08:56.785153
+q

# 2018-01-20 14:18:10.211173
+PYTHONPATH

# 2018-01-20 14:18:19.495175
+sys

# 2018-01-20 14:18:24.474088
+sys.path

# 2018-01-20 14:20:01.313322
+import sys

# 2018-01-20 14:20:04.718572
+sys.path

# 2018-01-20 14:20:17.607555
+print(sys.path)

# 2018-01-20 14:20:24.145047
+pp

# 2018-01-20 14:20:27.725026
+exit

# 2018-01-20 14:23:00.576185
+import pprint

# 2018-01-20 14:23:16.330917
+import sys

# 2018-01-20 14:23:35.583889
+pp = pprint.PrettyPrinter(indent=4)

# 2018-01-20 14:23:41.445003
+pp(sys.path)

# 2018-01-20 14:23:54.044740
+pp.pprint(sys.path)

# 2018-01-20 14:24:48.907477
+def ppp(d):
+    pp.pprint(d)

# 2018-01-20 14:24:55.102034
+ppp(sys.path)

# 2018-01-20 14:25:08.919979
+ppp("bleh","boo")

# 2018-01-20 14:25:26.469299
+ppp(["bleh","boo"])

# 2018-01-20 14:25:39.484334
+sys.path

# 2018-01-20 14:25:59.786264
+ppp(sys.path)

# 2018-01-23 07:32:45.815915
+import dpackage

# 2018-01-23 07:32:50.130763
+david()

# 2018-01-23 07:33:27.899263
+dpackage.david()

# 2018-01-23 07:34:17.834090
+import dpackage

# 2018-01-23 07:34:28.570085
+dpackage.david()

# 2018-01-23 07:35:08.438682
+dir

# 2018-01-23 07:35:23.181709
+dir(dpackage)

# 2018-01-23 07:38:18.132780
+import dpackage

# 2018-01-23 07:38:20.366841
+dpackage

# 2018-01-23 07:38:34.996579
+dpackage.d

# 2018-01-23 07:38:44.395543
+exit

# 2018-01-23 07:39:23.350086
+import dpackage

# 2018-01-23 07:39:28.269851
+dpackage.d

# 2018-01-23 07:39:42.267185
+import dpackage.d

# 2018-01-23 07:40:32.704561
+exit

# 2018-01-23 07:40:34.703154
+ls

# 2018-01-23 07:40:56.451698
+import d

# 2018-01-23 07:41:02.151042
+d.dave()

# 2018-01-23 07:41:13.247533
+exit

# 2018-01-23 07:41:54.701015
+import dpackage.d

# 2018-01-23 07:43:07.075925
+import dpackage.dpackage

# 2018-01-23 07:49:57.549275
+import mymodule

# 2018-01-23 07:50:02.195840
+mymodule.myfunc()

# 2018-01-23 07:50:26.121507
+from mymodule import myfunc

# 2018-01-23 07:50:28.482308
+myfunc()

# 2018-01-23 07:50:38.409077
+from mymodule import *

# 2018-01-23 07:50:40.232683
+myfunc()

# 2018-01-23 07:52:29.258938
+exit

# 2018-01-23 07:52:29.915790
+ls

# 2018-01-23 08:46:58.916363
+import mypackage

# 2018-01-23 08:47:15.993119
+mypackage.myfunc()

# 2018-01-23 08:47:27.725040
+from mypackage import mymodule

# 2018-01-23 08:47:32.946582
+mymodule.myfunc()

# 2018-01-23 08:48:17.299708
+from mypackage import mymodule

# 2018-01-23 08:48:20.944013
+mymodule.myfunc()

# 2018-01-23 08:49:55.175372
+from mypackage.mymodule import myfunc

# 2018-01-23 08:50:00.114355
+myfunc()

# 2018-01-23 09:30:37.388344
+from dpackage import dpackage

# 2018-01-23 09:31:36.121868
+from dpackage import dgus

# 2018-01-23 09:31:40.145445
+dgus.dave()

# 2018-01-23 09:32:17.487562
+from dpackage import dgus

# 2018-01-23 09:32:21.429230
+dgus.dave()

# 2018-01-23 09:33:09.672690
+
+k

# 2018-01-23 09:33:21.799082
+from dpackage.dgus import dave

# 2018-01-23 09:33:25.508727
+dave()

# 2018-01-23 09:36:45.468260
+import sys

# 2018-01-23 09:36:51.669999
+sys.path

# 2018-01-23 09:37:46.844052
+import pprint

# 2018-01-23 09:38:09.060602
+pp = pprint.PrettyPrinter(indent=4)

# 2018-01-23 09:38:25.267648
+pp = pp.pprint

# 2018-01-23 09:38:30.004488
+pp("bleh")

# 2018-01-23 09:38:38.071533
+pp(sys.path)

# 2018-01-23 09:40:16.656607
+sys.argv

# 2018-01-23 09:41:50.951086
+pp(sys.path[2])

# 2018-01-23 12:14:08.503741
+bleh = 'bleh'

# 2018-01-23 12:14:09.830216
+bleh

# 2018-01-23 12:14:16.354274
+PYTHONPATH

# 2018-01-23 12:53:55.607238
+sys.ps1

# 2018-01-23 12:53:58.432260
+import sys

# 2018-01-23 12:54:01.419944
+sys.ps1

# 2018-01-23 12:55:07.099030
+sys.ps2

# 2018-01-23 13:54:08.128622
+exit

# 2018-01-23 13:54:53.831023
+from dpackage import dgus

# 2018-01-23 13:54:57.238817
+dir(dgus)

# 2018-01-23 13:55:05.686554
+dgus.dave()

# 2018-01-23 14:21:54.722796
+d = 'dpackage'

# 2018-01-23 14:22:01.632547
+from d import dgus

# 2018-01-24 07:20:03.951831
+ls

# 2018-01-26 12:36:00.942474
+bleh = [1,2,3,4]

# 2018-01-26 12:36:12.869625
+for i in bleh:
+    print(i)

# 2018-01-26 12:37:22.235672
+True

# 2018-01-26 12:37:31.134009
+False

# 2018-01-26 12:37:37.279110
+False or True

# 2018-01-26 12:37:43.524188
+False or False

# 2018-01-26 12:37:51.458158
+True and True

# 2018-01-26 12:38:35.372568
+True or False

# 2018-01-26 12:38:49.308708
+10 > 1

# 2018-01-26 12:38:53.048048
+10 < 1

# 2018-01-26 12:39:01.325017
+10 <= 100

# 2018-01-26 12:39:37.691688
+import sys

# 2018-01-26 12:39:43.009352
+sys.builtin_module_names

# 2018-01-27 07:12:39.880190
+0 * 2

# 2018-01-27 07:13:09.984720
+[0] * 2

# 2018-01-27 07:13:37.800705
+0 in [1,2,3]

# 2018-01-27 07:13:49.265330
+0 in [0,2,3]

# 2018-01-27 07:15:37.153144
+a = [1,2,3]

# 2018-01-27 07:15:53.783225
+a.insert(0,"a")

# 2018-01-27 07:15:55.046531
+a

# 2018-01-27 07:16:25.501597
+a.reverse()

# 2018-01-27 07:16:26.265459
+a

# 2018-01-27 07:23:56.888631
+s = '12:34:56'

# 2018-01-27 07:24:19.580104
+s.split(':')

# 2018-01-27 08:29:52.770160
+l

# 2018-01-27 08:30:02.502175
+l = ['3', '123124234', None, 'needle', 'world', 'hay', 2, '3', True, False]

# 2018-01-27 08:30:04.531271
+l

# 2018-01-27 08:30:19.898394
+'3' in l

# 2018-01-27 08:36:05.093014
+l.index('needle')

# 2018-01-27 08:39:03.823053
+print('found the needle at position ' + str(l.index('needle')))

# 2018-01-27 08:46:49.169435
+a = 5

# 2018-01-27 08:47:10.968797
+type(a)

# 2018-01-27 08:47:29.711965
+str(type(a))

# 2018-01-27 08:54:28.136726
+exit

# 2018-01-27 08:54:43.677203
+sys.path

# 2018-01-27 08:55:04.218814
+exit

# 2018-01-27 09:17:29.544490
+def is_odd(n):
+    if n % 2 == 0:
+        return False
+    else:
+        return True

# 2018-01-27 09:17:35.350691
+is_odd(3)

# 2018-01-27 09:17:39.317611
+is_odd(2)

# 2018-01-27 09:20:52.368255
+def is_odd(n):
+    if n % 2 == 0:
+        return False
+    else:
+        return True

# 2018-01-27 09:23:56.917257
+import itertools

# 2018-01-27 09:24:17.131141
+itertools.count(10)

# 2018-01-27 10:21:47.754065
+import iqtest

# 2018-01-27 10:23:23.403672
+iqtest.is_odd

# 2018-01-27 10:23:44.224992
+dir(iqtest)

# 2018-01-27 10:37:28.277227
+from iqtest import is_odd

# 2018-01-27 10:38:50.537443
+import iqtest.iqtest

# 2018-01-27 10:39:26.191504
+from iqtest.iqtest import is_odd, is_odd_list, return_unique

# 2018-04-24 11:55:18.600964
+exit

# 2018-04-24 12:19:26.852459
+import sys

# 2018-04-24 12:19:32.173911
+sys.version

# 2018-04-24 12:19:40.017276
+exit

# 2018-04-24 12:40:26.362877
+import pycurl

# 2018-04-24 12:41:18.326416
+c = pycurl.Curl()

# 2018-04-24 12:42:00.199753
+c.setopt(c.URL, 'http://google.com')

# 2018-04-24 12:42:13.495798
+c.perform()

# 2018-04-24 12:42:31.143746
+c

# 2018-04-24 12:44:11.397380
+from io import BytesIO

# 2018-04-24 12:44:21.369428
+buffer = BytesIO()

# 2018-04-24 12:45:33.715393
+c = pycurl.Curl()

# 2018-04-24 12:45:53.866941
+c.setopt(c.URL, 'http://google.com')

# 2018-04-24 12:46:13.401479
+c.setopt(c.WRITEDATA, buffer)

# 2018-04-24 12:46:17.668359
+c.perform()

# 2018-04-24 12:46:21.825548
+c.close()

# 2018-04-24 12:46:34.959217
+body = buffer.getvalue()

# 2018-04-24 12:46:36.762138
+body

# 2018-04-24 12:48:29.554672
+print(c.getinfo(c.TOTAL_TIME))

# 2018-04-24 12:48:56.590476
+c = pycurl.Curl()

# 2018-04-24 12:49:01.114010
+c.setopt(c.URL, 'http://google.com')

# 2018-04-24 12:49:04.303867
+c.setopt(c.WRITEDATA, buffer)

# 2018-04-24 12:49:08.746643
+c.perform()

# 2018-04-24 12:49:14.445349
+print(c.getinfo(c.TOTAL_TIME))

# 2018-04-24 12:50:34.646395
+print(c.getinfo(c.PRETRANSFER_TIME))

# 2018-04-24 12:51:10.474250
+print(c.getinfo(c.NAMELOOKUP_TIME))

# 2018-05-02 11:39:44.371153
+print("howdy")

# 2018-05-02 11:41:24.692121
+print

# 2018-05-02 11:42:00.560403
+print("howdy")

# 2018-05-02 11:44:23.978169
+print

# 2018-05-02 11:48:26.488390
+print("howdy")

# 2018-05-02 11:48:50.801572
+print("howdy");

# 2018-05-02 11:49:33.592826
+name = "Dave"

# 2018-05-02 11:49:40.685170
+print(name)

# 2018-05-02 11:51:16.635721
+age = 27

# 2018-05-02 11:52:09.869691
+print( name)

# 2018-05-02 11:52:16.378892
+print('boo')

# 2018-05-02 11:53:01.371971
+print("my name is #{name}")

# 2018-05-02 11:55:07.577462
+print("my name is name")

# 2018-05-02 11:55:20.344011
+print(" my name is " + name)

# 2018-05-02 11:57:20.473946
+print(" age is {} and name is {}".format(age, name)
+)

# 2018-05-02 11:57:33.087855
+printf

# 2018-05-02 12:07:56.452074
+help("print")

# 2018-05-02 12:08:07.100279
+help(print)

# 2018-05-02 12:12:32.729300
+help("".format)

# 2018-05-02 12:14:30.315801
+"{0}, {1}, {2}".format("first", "second", "third")

# 2018-05-02 12:14:45.725939
+"{2}, {2}, {2}".format("first", "second", "third")

# 2018-05-02 12:14:56.020789
+"{2}, {3}, {1}".format("first", "second", "third")

# 2018-05-02 12:15:26.458103
+"{2}, {3}, {0}".format("first", "second", "third")

# 2018-05-02 12:15:31.990640
+"{2}, {1}, {0}".format("first", "second", "third")

# 2018-05-02 12:19:33.578007
+if 1 < 2:
+    print("one")

# 2018-05-02 12:19:40.861264
+if 3 < 2:
+    print("one")

# 2018-05-02 12:22:36.378638
+if 1:
+    print('one')
+else:
+    print('nuttin')

# 2018-05-02 12:25:19.457265
+if 1:
+    print('la')
+else:
+    print('foo')
+        

# 2018-05-02 12:25:48.423786
+if age == 14:
+    print('hoo')

# 2018-05-02 12:26:04.223459
+if age == 37:
+    print('hoo')

# 2018-05-02 12:26:09.973240
+age

# 2018-05-02 12:26:15.801453
+if age == 27:
+    print('hoo')

# 2018-05-02 12:26:35.089082
+"""1
+2
+3
+"""
+

# 2018-05-02 12:31:43.773613
+age < 10

# 2018-05-02 12:31:55.420845
+age > 25

# 2018-05-02 12:32:02.620867
+age < 28

# 2018-05-02 12:32:55.386161
+True and False

# 2018-05-02 12:32:59.620564
+True and True

# 2018-05-02 12:34:36.353143
+def hello():
+    print('hoo')

# 2018-05-02 12:34:39.328399
+hello

# 2018-05-02 12:34:41.799556
+hello()

# 2018-05-02 12:35:39.047171
+def hello(mystring):
+    print(mystring)
+    

# 2018-05-02 12:35:42.650022
+hello

# 2018-05-02 12:35:46.361629
+hello()

# 2018-05-02 12:35:51.846232
+hello("hoo")

# 2018-05-02 12:36:38.682731
+def hello(mystring, myother):
+    print(mystring + myother)
+    

# 2018-05-02 12:36:53.043068
+hello("dave", "hoo")

# 2018-05-02 12:39:11.846227
+def hello(mystring, myother):
+    mystring + myother
+    

# 2018-05-02 12:39:18.541622
+hello("dave", "hoo")

# 2018-05-02 12:39:32.681143
+def hello(mystring, myother):
+    return mystring + myother
+    

# 2018-05-02 12:39:36.678564
+hello("dave", "hoo")

# 2018-05-02 12:44:25.812836
+dognames = [1,2,3]

# 2018-05-02 12:44:37.717422
+nums = [1,2,3]

# 2018-05-02 12:44:41.869554
+nums[0]

# 2018-05-02 12:46:03.712948
+n = (1,2,3)

# 2018-05-02 12:46:04.781485
+n

# 2018-05-02 12:46:08.032398
+n[0]

# 2018-05-02 12:46:19.095689
+nums[3] = "bleh"

# 2018-05-02 12:46:32.730594
+nums.append("bleh")

# 2018-05-02 12:46:34.908887
+nums

# 2018-05-02 12:47:14.604375
+del(nums[1])

# 2018-05-02 12:47:16.705830
+nums

# 2018-05-02 12:54:08.830747
+for i in range(1,1000):
+    print(i)

# 2018-05-02 12:54:30.658199
+for i in range(1,1000000):
+    print(i)

# 2018-05-02 12:59:29.398311
+import json

# 2018-05-02 12:59:46.478924
+your_json = '["foo", {"bar":["baz", null, 1.0, 2]}]'

# 2018-05-02 12:59:56.793320
+parsed = json.loads(your_json)

# 2018-05-02 13:02:27.608674
+print( json.dumps(parsed, indent=4))

# 2018-05-02 13:11:17.032094
+class Dog:
+    def bark(self):
+        print("BARK")

# 2018-05-02 13:11:24.087087
+d = Dog()

# 2018-05-02 13:11:27.094571
+d.bark()

# 2018-05-05 06:59:15.365004
+from turtle import *
+color('red', 'yellow')
+begin_fill()
+while True:
+    forward(200)
+    left(170)
+    if abs(pos()) < 1:
+        break
+end_fill()
+done()

# 2018-05-05 07:00:38.014486
+from turtle import *
+color('red', 'yellow')
+begin_fill()
+while True:
+    forward(200)
+    left(171)
+    if abs(pos()) < 1:
+        break
+end_fill()
+done()

# 2018-05-05 07:02:08.656827
+reset()

# 2018-05-05 08:20:45.294538
+b = {'howdy': 'hoo'}

# 2018-05-05 08:20:48.808832
+b.howdy

# 2018-05-05 08:21:01.271893
+b['howdy']

# 2018-05-08 09:48:44.285971
+b.howdy

# 2018-05-08 09:49:25.219329
+import operator

# 2018-05-08 09:49:27.337879
+operator

# 2018-05-08 09:49:58.062573
+operator.attrgetter

# 2018-05-08 09:50:14.209018
+operator.itemgetter()

# 2018-05-08 09:50:19.216995
+operator.itemgetter(1)

# 2018-05-10 09:39:28.143744
+i = "david"

# 2018-05-10 09:39:37.090350
+print("I am {i}")

# 2018-05-10 09:43:29.681545
+"I am %s" % i

# 2018-05-10 09:43:59.153483
+print( "I am %s" % i)

# 2018-05-10 10:53:30.292261
+'{0}, {1}, {2}'.format('a', 'b', 'c')

# 2018-05-10 10:53:45.385501
+print('{0}, {1}, {2}'.format('a', 'b', 'c'))

# 2018-05-10 14:08:30.037824
+print("I am {i}")

# 2018-05-15 11:18:48.665638
+import os

# 2018-05-15 11:19:29.173638
+os.environ.setdefault(DJANGO_SETTINGS_MODULE, "portfolio.settings")

# 2018-05-15 11:20:47.497050
+os.environ.setdefault("DJANGO_SETTINGS_MODULE", "portfolio.settings")

# 2018-05-15 11:21:18.808963
+from portfolio.models import blog

# 2018-05-15 11:21:42.063719
+ls

# 2018-05-15 11:21:43.952119
+pwd

# 2018-05-15 11:23:03.619531
+os.environ.setdefault("DJANGO_SETTINGS_MODULE", "portfolio.settings")

# 2018-05-15 11:23:09.236999
+import os

# 2018-05-15 11:23:10.934869
+os.environ.setdefault("DJANGO_SETTINGS_MODULE", "portfolio.settings")

# 2018-05-15 11:23:32.940790
+from blog.models import Blog

# 2018-05-15 11:31:56.657625
+date.now()

# 2018-05-15 11:31:59.246785
+now()

# 2018-05-15 11:32:21.631262
+datetime

# 2018-05-15 11:32:25.490561
+import datetime

# 2018-05-15 11:32:34.059625
+datetime.datetime.now()

# 2018-05-15 11:55:58.630111
+fake = Faker()

# 2018-05-15 11:56:58.744025
+from faker import Faker

# 2018-05-15 11:57:02.810231
+fake = Faker()

# 2018-05-15 11:57:07.672446
+fake.name

# 2018-05-15 11:57:12.843028
+fake.name()

# 2018-05-15 11:57:36.704691
+for i in range(1, 10):
+    print(i)

# 2018-05-15 11:57:56.623682
+for i in range(1, 10):
+    print(fake.name)

# 2018-05-15 11:58:04.066539
+for i in range(1, 10):
+    print(fake.name())

# 2018-05-15 11:58:14.161882
+for i in range(1, 10):
+    print(fake.address())

# 2018-05-19 05:28:05.694032
+import string

# 2018-05-19 06:19:50.814942
+'a'.capitalize()

# 2018-05-19 06:24:44.783510
+"a" == "a"

# 2018-05-19 06:25:03.104407
+"a" == char(97)

# 2018-05-19 06:25:07.477979
+"a" == chr(97)

# 2018-05-19 06:25:55.175132
+'a'.upper

# 2018-05-19 06:25:58.566351
+'a'.upper()

# 2018-05-19 06:34:23.845229
+exit

# 2018-05-19 06:42:58.200000
+"a".casefold()

# 2018-05-19 06:43:02.421846
+"A".casefold()

# 2018-05-19 07:19:47.133264
+word = 'wordaaa'

# 2018-05-19 07:20:02.251922
+word[0:5]

# 2018-05-19 07:20:13.756251
+word[0:4]

# 2018-05-19 07:20:49.694865
+word[:4]

# 2018-05-19 07:23:11.413076
+word.encode()

# 2018-05-19 07:23:28.027450
+word.encode('utf-8')

# 2018-05-19 07:23:40.265843
+word.encode('utf-16')

# 2018-05-19 07:24:44.144123
+word

# 2018-05-19 07:24:48.463887
+word = 'word'

# 2018-05-19 07:24:51.372759
+word.encode('utf-16')

# 2018-05-29 06:16:40.526612
+16 * 16

# 2018-05-29 07:09:37.978805
+16 * 16 * 16
